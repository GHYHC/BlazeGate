@using System.Linq.Expressions
@using BlazeGate.Model.EFCore
@using BlazeGate.Services.Interface
@using LinqKit
@using Microsoft.AspNetCore.Authorization
@using BlazeGate.RBAC.Components.Pages.Page
@using BlazeGate.RBAC.Components.Pages.Role
@using BlazeGate.RBAC.Components.Pages.UserRole
@page "/"
@attribute [ReuseTabsPage(Title = "服务")]
@attribute [Authorize]
@inject IStringLocalizer<I18n> L

<ServiceList @ref="ServiceList">
    <FunctionTemplate>
        <Button Type="@ButtonType.Primary" OnClick="async () => { await AddService(); }">
            @L["service.add"]
        </Button>
    </FunctionTemplate>
    <HeaderTemplate>
        <GridRow Justify="RowJustify.SpaceBetween">
            <GridCol Span="8">
                <Text Type="context.Enabled? TextElementType.Success: TextElementType.Secondary" Strong>@context.ServiceName</Text>
            </GridCol>
            <GridCol Style="text-align:center" Span="8">
                <Space Size="SpaceSize.Large">
                    <SpaceItem>
                        <Space Size="SpaceSize.Middle">
                            <SpaceItem>
                                <Text Type="TextElementType.Secondary">@L["service.active"]</Text>
                            </SpaceItem>
                            <SpaceItem>
                                <Tooltip Title="@(L["service.activeHealthyCount"])" >
                                    <Text Type="TextElementType.Success" Strong>
                                        @(HealthStateCounts.FirstOrDefault(b => b.ServiceName == context.ServiceName)?.ActiveHealthyCount ?? 0)
                                    </Text>
                                </Tooltip>
                            </SpaceItem>
                            <SpaceItem>
                                <Tooltip Title="@(L["service.activeUnhealthyCount"])" >
                                    <Text Type="TextElementType.Danger" Strong>
                                        @(HealthStateCounts.FirstOrDefault(b => b.ServiceName == context.ServiceName)?.ActiveUnhealthyCount ?? 0)
                                    </Text>
                                </Tooltip>
                            </SpaceItem>
                            <SpaceItem>
                                <Tooltip Title="@(L["service.activeUnknownCount"])" >
                                    <Text Type="TextElementType.Warning" Strong>
                                        @(HealthStateCounts.FirstOrDefault(b => b.ServiceName == context.ServiceName)?.ActiveUnknownCount ?? 0)
                                    </Text>
                                </Tooltip>
                            </SpaceItem>
                        </Space>
                    </SpaceItem>
                    <SpaceItem>
                        <Space Size="SpaceSize.Middle">
                            <SpaceItem>
                                <Text Type="TextElementType.Secondary">@L["service.passive"]</Text>
                            </SpaceItem>
                            <SpaceItem>
                                <Tooltip Title="@(L["service.passiveHealthyCount"])" >
                                    <Text Type="TextElementType.Success" Strong>
                                        @(HealthStateCounts.FirstOrDefault(b => b.ServiceName == context.ServiceName)?.PassiveHealthyCount ?? 0)
                                    </Text>
                                </Tooltip>
                            </SpaceItem>
                            <SpaceItem>
                                <Tooltip Title="@(L["service.passiveUnhealthyCount"])" >
                                    <Text Type="TextElementType.Danger" Strong>
                                        @(HealthStateCounts.FirstOrDefault(b => b.ServiceName == context.ServiceName)?.PassiveUnhealthyCount ?? 0)
                                    </Text>
                                </Tooltip>
                            </SpaceItem>
                            <SpaceItem>
                                <Tooltip Title="@(L["service.passiveUnknownCount"])" >
                                    <Text Type="TextElementType.Warning" Strong>
                                        @(HealthStateCounts.FirstOrDefault(b => b.ServiceName == context.ServiceName)?.PassiveUnknownCount ?? 0)
                                    </Text>
                                </Tooltip>
                            </SpaceItem>
                        </Space>
                    </SpaceItem>
                </Space>
            </GridCol>
            <GridCol Style="text-align:right" Span="8">
                <Space>
                    <SpaceItem>
                        <span @onclick:stopPropagation="true">
                            <Text Disabled="context.Enabled == true" Type="TextElementType.Success">
                                <span @onclick="async b =>{ await EnabledChanged(context.Id, true); }">@L["service.enable"]</span>
                            </Text>
                        </span>
                    </SpaceItem>
                    <SpaceItem>
                        <span @onclick:stopPropagation="true">
                            <Text Disabled="context.Enabled == false" Type="TextElementType.Secondary">
                                <span @onclick="async b =>{ await EnabledChanged(context.Id, false); }">@L["service.disable"]</span>
                            </Text>
                        </span>
                    </SpaceItem>
                    <SpaceItem>
                        <span @onclick:stopPropagation="true">
                            <Popconfirm Title="@(L["service.delete.confirm"])" OnConfirm="async () => { await DeleteService(context.Id); }">
                                <Text Type="TextElementType.Danger">@L["service.delete"]</Text>
                            </Popconfirm>
                        </span>
                    </SpaceItem>
                </Space>
            </GridCol>
        </GridRow>
    </HeaderTemplate>
    <ChildContent>
        <Tabs>
            <TabPane Tab="@(L["service.config"])" >
                <ServiceConfigIndex ServiceName="@context.ServiceName" OnFinish="async (id) => { await ServiceList.Refresh(id); }" />
            </TabPane>
            <TabPane Tab="@(L["service.destination"])" >
                <DestinationIndex ServiceName="@context.ServiceName" ServiceToken="@context.Token"></DestinationIndex>
            </TabPane>
            <TabPane Tab="@(L["service.authRsaKey"])" >
                <AuthRsaKeyIndex ServiceName="@context.ServiceName"></AuthRsaKeyIndex>
            </TabPane>
            <TabPane Tab="@(L["service.authWhiteList"])" >
                <AuthWhiteListIndex ServiceName="@context.ServiceName"></AuthWhiteListIndex>
            </TabPane>
            <TabPane Tab="@(L["service.page"])" >
                <PageIndex ServiceName="@context.ServiceName"></PageIndex>
            </TabPane>
            <TabPane Tab="@(L["service.role"])" >
                <RoleIndex ServiceName="@context.ServiceName"></RoleIndex>
            </TabPane>
            <TabPane Tab="@(L["service.userRole"])" >
                <UserRoleIndex ServiceName="@context.ServiceName"></UserRoleIndex>
            </TabPane>
        </Tabs>
    </ChildContent>
</ServiceList>