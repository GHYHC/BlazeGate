// <auto-generated />
using System;
using BlazeGate.Model.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazeGate.Model.EFCore.Migrations
{
    [DbContext(typeof(BlazeGateContext))]
    partial class BlazeGateContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazeGate.Model.EFCore.AuthRsaKey", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("dateTime")
                        .HasComment("创建时间");

                    b.Property<string>("PrivateKey")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasComment("RSA 私钥");

                    b.Property<string>("PublicKey")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasComment("RSA 公钥");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint")
                        .HasComment("服务ID");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("服务名称");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("dateTime")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ServiceName");

                    b.ToTable("AuthRsaKey", t =>
                        {
                            t.HasComment("授权RSA秘密");
                        });
                });

            modelBuilder.Entity("BlazeGate.Model.EFCore.AuthWhiteList", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("dateTime")
                        .HasComment("创建时间");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("dateTime")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ServiceName");

                    b.ToTable("AuthWhiteList");
                });

            modelBuilder.Entity("BlazeGate.Model.EFCore.Destination", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("ActiveHealthState")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ActiveHealthStateUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("dateTime")
                        .HasComment("创建时间");

                    b.Property<string>("PassiveHealthState")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("PassiveHealthStateUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("dateTime")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.HasIndex("Address");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ServiceName");

                    b.HasIndex("Address", "ServiceName")
                        .IsUnique();

                    b.ToTable("Destination");
                });

            modelBuilder.Entity("BlazeGate.Model.EFCore.DistributedCache", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(449)
                        .HasColumnType("nvarchar(449)");

                    b.Property<DateTimeOffset?>("AbsoluteExpiration")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ExpiresAtTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("SlidingExpirationInSeconds")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("Value")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("DistributedCache", "dbo");
                });

            modelBuilder.Entity("BlazeGate.Model.EFCore.Page", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("dateTime")
                        .HasComment("创建时间");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("IndexNumber")
                        .HasColumnType("int");

                    b.Property<long>("ParentPageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("SubPath")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("dateTime")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.HasIndex("ParentPageId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ServiceName");

                    b.ToTable("Page");
                });

            modelBuilder.Entity("BlazeGate.Model.EFCore.Role", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("dateTime")
                        .HasComment("创建时间");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("dateTime")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ServiceName");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("BlazeGate.Model.EFCore.RolePage", b =>
                {
                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("PageId")
                        .HasColumnType("bigint");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("RoleId", "PageId", "ServiceId");

                    b.HasIndex("ServiceName");

                    b.ToTable("RolePage");
                });

            modelBuilder.Entity("BlazeGate.Model.EFCore.Service", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("dateTime")
                        .HasComment("创建时间");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasComment("启用");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit")
                        .HasComment("是否为系统服务");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("服务名称");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Token");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("dateTime")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.HasIndex("ServiceName")
                        .IsUnique();

                    b.ToTable("Service", t =>
                        {
                            t.HasComment("服务表");
                        });
                });

            modelBuilder.Entity("BlazeGate.Model.EFCore.ServiceConfig", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("ActiveHealthCheckEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("ActiveHealthCheckInterval")
                        .HasColumnType("int");

                    b.Property<string>("ActiveHealthCheckPath")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ActiveHealthCheckPolicy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ActiveHealthCheckThreshold")
                        .HasColumnType("int");

                    b.Property<int>("ActiveHealthCheckTimeout")
                        .HasColumnType("int");

                    b.Property<int>("ActiveRemoveUnhealthyAfter")
                        .HasColumnType("int");

                    b.Property<string>("AuthorizationPolicy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("dateTime")
                        .HasComment("创建时间");

                    b.Property<string>("LoadBalancingPolicy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("PassiveHealthCheckEnabled")
                        .HasColumnType("bit");

                    b.Property<float>("PassiveHealthCheckFailureRate")
                        .HasColumnType("real");

                    b.Property<string>("PassiveHealthCheckPolicy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("PassiveHealthCheckReactivationPeriod")
                        .HasColumnType("int");

                    b.Property<int>("PassiveRemoveUnhealthyAfter")
                        .HasColumnType("int");

                    b.Property<string>("RateLimiterPolicy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("RequestActivityTimeout")
                        .HasColumnType("int");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("SessionAffinityCookieHttpOnly")
                        .HasColumnType("bit");

                    b.Property<int>("SessionAffinityCookieMaxAge")
                        .HasColumnType("int");

                    b.Property<bool>("SessionAffinityEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("SessionAffinityFailurePolicy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("SessionAffinityKeyName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("SessionAffinityPolicy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("dateTime")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ServiceName");

                    b.ToTable("ServiceConfig");
                });

            modelBuilder.Entity("BlazeGate.Model.EFCore.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(28)
                        .HasColumnType("nvarchar(28)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("dateTime")
                        .HasComment("创建时间");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(28)
                        .HasColumnType("nvarchar(28)");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("dateTime")
                        .HasComment("更新时间");

                    b.Property<string>("UserData")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(28)
                        .HasColumnType("nvarchar(28)");

                    b.HasKey("Id");

                    b.HasIndex("Account")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("BlazeGate.Model.EFCore.UserRole", b =>
                {
                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("RoleId", "UserId", "ServiceId");

                    b.HasIndex("ServiceName");

                    b.ToTable("UserRole");
                });
#pragma warning restore 612, 618
        }
    }
}
